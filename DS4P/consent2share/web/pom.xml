<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gov.samhsa.consent2share</groupId>
		<artifactId>consent2share</artifactId>
		<version>0.3.0-SNAPSHOT</version>
	</parent>

	<artifactId>consent2share-web</artifactId>
	<packaging>war</packaging>
	<name>consent2share web</name>

	<dependencies>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.flexjson</groupId>
			<artifactId>flexjson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<!-- ROO dependencies -->
		<dependency>
			<groupId>org.springframework.roo</groupId>
			<artifactId>org.springframework.roo.annotations</artifactId>
		</dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-js-resources</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>jstl-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jstl-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-webflow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-aspects</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
		</dependency>

		<!-- Thymeleaf -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring3</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity3</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- iText -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-amqp</artifactId>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>gov.samhsa.consent2share</groupId>
			<artifactId>try-policy-client</artifactId>
		</dependency>

		<dependency>
			<groupId>com.echosign</groupId>
			<artifactId>adobe-ecosign</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>XmlSchema</artifactId>
					<groupId>org.apache.ws.commons</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Our own projects -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>consent2share-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>edu.vt.middleware</groupId>
			<artifactId>vt-password</artifactId>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.39.0</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>2.33.0</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>${selenium-server.version}</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>consent2share</finalName>
	</build>

	<profiles>
		<profile>
			<!-- mvn clean install -Pdb-schema-create -->
			<id>db-schema-create</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-create-schema-ddl</id>
								<phase>process-classes</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>com.feisystems.tools.hibernate.SpringEntityManagerFactoryBeanConfigSchemaExporter</mainClass>
									<arguments>
										<argument>--create</argument>
										<argument>--delimiter=;</argument>
										<argument>--output=${project.basedir}/${project.build.finalName}-create-tables.sql</argument>
										<argument>--activeSpringProfile=runtime</argument>
										<argument>--dataAccessApplicationContextConfigClassPath=classpath:META-INF/spring/applicationContext-dataAccess.xml</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>com.feisystems.tools</groupId>
					<artifactId>schema-export</artifactId>
				</dependency>
			</dependencies>

		</profile>

		<profile>
			<!-- mvn clean install -Pdb-schema-drop -->
			<id>db-schema-drop</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-create-schema-ddl</id>
								<phase>process-classes</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>com.feisystems.tools.hibernate.SpringEntityManagerFactoryBeanConfigSchemaExporter</mainClass>
									<arguments>
										<argument>--drop</argument>
										<argument>--delimiter=;</argument>
										<argument>--output=${project.basedir}/${project.build.finalName}-drop-tables.sql</argument>
										<argument>--activeSpringProfile=runtime</argument>
										<argument>--dataAccessApplicationContextConfigClassPath=classpath:META-INF/spring/applicationContext-dataAccess.xml</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>com.feisystems.tools</groupId>
					<artifactId>schema-export</artifactId>
				</dependency>
			</dependencies>

		</profile>

		<!-- To include selenium test: mvn clean install -Pselenium-test -->
		<profile>
			<id>selenium-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<!-- These dependencies do not care dependencies in non-profile dependencyManagement -->
						<dependencies>
							<!-- specify the dependent jdbc driver here -->
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql-connector.version}</version>
							</dependency>
						</dependencies>

						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${maven.database.url}</url>
							<username>${maven.database.username}</username>
							<password>${maven.database.password}</password>
							<!-- You can comment out username/password configurations and have 
								maven to look them up in your settings.xml using ${settingsKey} -->
							<settingsKey>sensibleKey</settingsKey>
							<!-- sql-maven-plugin which skip the execution for projects of packaging 
								type 'pom' as default behaviour. It is same a few plugins like the source 
								and javadoc plugin (amongst others) -->
							<forceMojoExecution>true</forceMojoExecution>
						</configuration>

						<executions>
							<execution>
								<id>drop-db-if-any</id>
								<phase>package</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<!-- need another database to drop the targeted one -->
									<url>${maven.database-deployment-helper.url}</url>
									<username>${maven.database-deployment-helper.username}</username>
									<password>${maven.database-deployment-helper.password}</password>
									<autocommit>true</autocommit>
									<sqlCommand>drop database consent2share</sqlCommand>
									<!-- ignore error when database is not avaiable -->
									<onError>continue</onError>
								</configuration>
							</execution>

							<execution>
								<id>create-db</id>
								<phase>package</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<!-- need another database to create the targeted one -->
									<url>${maven.database-deployment-helper.url}</url>
									<username>${maven.database-deployment-helper.username}</username>
									<password>${maven.database-deployment-helper.password}</password>
									<!-- no transaction -->
									<autocommit>true</autocommit>
									<sqlCommand>create database consent2share</sqlCommand>
								</configuration>
							</execution>

							<execution>
								<id>create-schema</id>
								<phase>package</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<srcFiles>
										<srcFile>../sqlDatabase/src/main/resources/mysql-scripts/consent2share-schema.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>

							<execution>
								<id>create-data-lookup</id>
								<phase>package</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<orderFile>ascending</orderFile>
									<fileset>
										<basedir>${basedir}/../sqlDatabase</basedir>
										<includes>
											<include>src/main/resources/mysql-scripts/data/*.sql</include>
										</includes>
									</fileset>
								</configuration>
							</execution>

							<execution>
								<id>create-data-persona</id>
								<phase>package</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<orderFile>ascending</orderFile>
									<fileset>
										<basedir>${basedir}/../sqlDatabase</basedir>
										<includes>
											<include>src/main/resources/mysql-scripts/data/persona/*.sql</include>
										</includes>
									</fileset>
								</configuration>
							</execution>

						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<!-- <version>2.0</version> -->
						<configuration>
							<path>/consent2share</path>
							<contextFile>${basedir}/src/main/resources/META-INF/spring/seleniumContext.xml</contextFile>
							<keystoreFile>C:/consent2share.keystore</keystoreFile>
							<keystorePass>changeit</keystorePass>
							<useTestClasspath>true</useTestClasspath>
						</configuration>
						<executions>
							<!-- At pre-integration-test phase, run the war in an embedded Tomcat 
								server. -->
							<execution>
								<id>start-tomcat</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run-war-only</goal>
								</goals>
								<configuration>
									<httpsPort>8444</httpsPort>
									<port>8081</port>
									<fork>true</fork>
								</configuration>
							</execution>
							<!-- At post-integration-test phase, stop the embedded Tomcat server. -->
							<execution>
								<id>stop-tomcat</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>shutdown</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<!-- Used to allow embedded Tomcat to connect to a MySQL database -->
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql-connector.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>verify</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includes>
								<include>**/selenium/*.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>
