<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Infrastructure -->

	<!-- Provides connection to the RabbitMQ broker -->
	<rabbit:connection-factory id="connectionFactory"
		username="${rabbitMQ.username}" password="${rabbitMQ.password}" port="${rabbitMQ.port}" host="${rabbitMQ.host}" />

	<!-- A template for sending messages and performing other commands to RabbitMQ -->
	<!-- Set channel-transacted to true to tell the framework to use a transactional channel and to end all operations (send or receive) with a commit or rollback depending on the outcome, with an exception signaling a rollback. -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" channel-transacted="true" />

	<!-- This helps in configuring the AMQP broker, like creating a new queue -->
	<rabbit:admin connection-factory="connectionFactory" />

	<rabbit:queue name="${rabbitMQ.queueName}" auto-delete="false"
		durable="true" />

	<rabbit:fanout-exchange name="${rabbitMQ.exchangeName}"
		auto-delete="false" durable="true">
		<rabbit:bindings>
			<rabbit:binding queue="${rabbitMQ.queueName}" />
		</rabbit:bindings>
	</rabbit:fanout-exchange>
</beans>
